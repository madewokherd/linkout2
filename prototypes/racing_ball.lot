; Copyright (C) 2010, 2011 by Vincent Povirk
; 
; Permission is hereby granted, free of charge, to any person obtaining a copy
; of this software and associated documentation files (the "Software"), to deal
; in the Software without restriction, including without limitation the rights
; to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
; copies of the Software, and to permit persons to whom the Software is
; furnished to do so, subject to the following conditions:
; 
; The above copyright notice and this permission notice shall be included in
; all copies or substantial portions of the Software.
; 
; THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
; AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
; LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
; OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
; THE SOFTWARE.

(frame

; top wall
(box
    (x 5)
    (y 0)
    (width 405)
    (height 10))

; left wall
(box
    (x 0)
    (y 5)
    (width 10)
    (height 205))

; bottom wall
(box
    (x 5)
    (y 205)
    (width 405)
    (height 10))

; right wall
(box
    (x 405)
    (y 5)
    (width 10)
    (height 205))

; inner wall
(box
    (x 60)
    (y 60)
    (width 295)
    (height 95))

; ball
(box
    (x 20)
    (y 20)
    (width 2)
    (height 2)
    (dx 1)
    (dy 2)
    (thrust 0.125) ; Added speed when a button is pressed
    (elasticity 0.5) ; Speed multiplier for when hitting walls
    (air-friction 0.9875) ; Speed multiplier each frame
    ; The maximum speed in a cardinal direction that we can accelerate to is equal to thrust / (1 - air-friction).
    (OnFrame (begin
        (and (getglobal left-pressed) (setown dx (- (getown dx) (getown thrust))))
        (and (getglobal right-pressed) (setown dx (+ (getown dx) (getown thrust))))
        (and (getglobal up-pressed) (setown dy (- (getown dy) (getown thrust))))
        (and (getglobal down-pressed) (setown dy (+ (getown dy) (getown thrust))))
        (check-rectangle (+ (getown x) (getown dx)) (getown y) (getown width) (getown height) other otherpixeltype
            (if (= (getlocal self) (getlocal other)) () (begin (setown dy (* (getown dy) (getown elasticity))) (setown dx (* (- (getown dx)) (getown elasticity))) 1)))
        (check-rectangle (getown x) (+ (getown y) (getown dy)) (getown width) (getown height) other otherpixeltype
            (if (= (getlocal self) (getlocal other)) () (begin (setown dx (* (getown dx) (getown elasticity))) (setown dy (* (- (getown dy)) (getown elasticity))) 1)))
        (setown dx (* (getown dx) (getown air-friction)))
        (setown dy (* (getown dy) (getown air-friction)))
        (setown x (+ (getown x) (getown dx)))
        (setown y (+ (getown y) (getown dy))))))

) ; end frame

